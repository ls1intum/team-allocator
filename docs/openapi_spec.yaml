openapi: 3.1.0
info:
  title: TEASE & PROMPT
  version: 3.0.0
  description: |-
    Work-in-progress example API to enable the TEASE UI to communicate with a service (PROMPT) that can deliver information on students participating in the iPraktikum at TUM.
    ---
    Using this API you can retrieve information on students and their associated attributes.
servers:
  - url: https://prompt.ase.cit.tum.de/api/tease
paths:
  /course-iterations/{courseIterationId}/projects:
    get:
      tags:
        - Projects
      summary: Retrieve projects from a specific course iteration
      description: Returns projects from a course iteration based on the provided ID.
      parameters:
        - in: path
          name: courseIterationId
          required: true
          description: Unique identifier of the course iteration
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved course iteration projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  /course-iterations/{courseIterationId}/students:
    get:
      tags:
        - Students
      summary: Retrieve students from a specific course iteration
      description: Returns students from a course iteration based on the provided ID.
      parameters:
        - in: path
          name: courseIterationId
          required: true
          description: Unique identifier of the course iteration
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved course iteration students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
  /course-iterations/{courseIterationId}/allocations:
    post:
      tags:
        - Allocations
      summary: Submit the final result of the matching/allocation
      description: After the allocation is concluded, TEASE can report the results (which team each student was assigned to) to PROMPT without needing to repeat/send back all of the information that was initially sent
      parameters:
        - in: path
          name: courseIterationId
          required: true
          description: Unique identifier of the course iteration
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Allocation'
      responses:
        '200':
          description: OK
    get:
      tags:
        - Allocations
      summary: Retrieve the final result of the matching/allocation
      description: After the allocation is concluded, TEASE can report the results (which team each student was assigned to) to PROMPT without needing to repeat/send back all of the information that was initially sent
      parameters:
        - in: path
          name: courseIterationId
          required: true
          description: Unique identifier of the course iteration
          schema:
            type: string
      responses:
        '200':
          description: An array of arrays, each inner array contains the unique identifiers of students that were allocated to the same project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Allocation'
  /course-iterations/{courseIterationId}/skills:
    get:
      tags:
        - Skills
      summary: Retrieve the skills from a specific course iteration
      description: After the allocation is concluded, TEASE can report the results (which team each student was assigned to) to PROMPT without needing to repeat/send back all of the information that was initially sent
      parameters:
        - in: path
          name: courseIterationId
          required: true
          description: Unique identifier of the course iteration
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
components:
  schemas:
    Student:
      type: object
      description: A person enrolled in the iPraktikum course at TUM
      properties:
        id:
          type: string
          format: tum id
        firstName:
          type: string
        lastName:
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        nationality:
          type: string
          format: iso 3166-1 alpha-2
        email:
          type: string
        studyProgram:
          type: string
        studyDegree:
          type: string
        semester:
          type: integer
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Language'
        introSelfAssessment:
          $ref: '#/components/schemas/SkillProficiency'
        introCourseProficiency:
          $ref: '#/components/schemas/SkillProficiency'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/StudentSkill'
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
        studentComments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        tutorComments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        projectPreferences:
          type: array
          items:
            $ref: '#/components/schemas/ProjectPreference'
      required:
        - id
        - firstName
        - lastName
        - gender
        - nationality
        - email
        - studyProgram
        - studyDegree
        - semester
        - languages
        - introSelfAssessment
        - introCourseProficiency
        - skills
        - devices
        - studentComments
        - tutorComments
        - projectPreferences
      examples:
        - id: tum_id_1
          firstName: Aerandir
          lastName: Brandybuck
          email: aerandir.brandybuck@tum.de
          gender: Prefer not to say
          nationality: DE
          studyProgram: Information Systems
          studyDegree: Bachelor
          semester: 5
          languages:
            - language: en
              proficiency: C1/C2
            - language: de
              proficiency: Native
          introSelfAssessment: Intermediate
          introCourseProficiency: Novice
          devices: [IPhone, Mac]
          skills:
            - { id: key_iOS, proficiency: Novice }
            - { id: key_CI/CD, proficiency: Intermediate }
          projectPreferences:
            - { priority: 1, projectId: ios2223quartett }
            - { priority: 2, projectId: ios2223bsh }
          studentComments:
            - author: Aerandir Brandybuck
              description: Reason for first choice
              text: I love cars
              date: 2024-02-15
            - author: Aerandir Brandybuck
              description: Intro course
              text: I would prefer to work in an international team
              date: 2024-01-11
          tutorComments:
            - author: Liam Nguyen
              description: Intro course
              text: Motivated, good at accepting constructive criticism
              date: 2024-01-12
    Project:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
      required:
        - name
        - id
      examples:
        - name: Quartett
          id: ios2223quartett
        - name: BSH
          id: ios2223bsh
    ProjectPreference:
      type: object
      properties:
        projectId:
          type: string
        priority:
          type: integer
      required:
        - projectId
        - priority
      examples:
        - projectId: ios2223bsh
          priority: 1
    Device:
      type: string
      enum:
        - IPhone
        - IPad
        - Mac
        - Watch
        - Raspberry Pi
    Skill:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        id:
          type: string
      required:
        - description
        - title
        - id
      examples:
        - title: UI/UX
          id: key
          description: Development/design of user interfaces and the user experience
    StudentSkill:
      type: object
      properties:
        id:
          type: string
        proficiency:
          $ref: '#/components/schemas/SkillProficiency'
      required:
        - id
        - proficiency
      examples:
        - id: key
          proficiency: Advanced
    SkillProficiency:
      type: string
      description: Proficiency in a skill
      enum:
        - Novice
        - Intermediate
        - Advanced
        - Expert
    Language:
      type: object
      properties:
        language:
          type: string
          format: ISO 639-1
        proficiency:
          $ref: '#/components/schemas/LanguageProficiency'
      required:
        - language
        - proficiency
      examples:
        - language: en
          proficiency: Native
    LanguageProficiency:
      type: string
      enum:
        - A1/A2
        - B1/B2
        - C1/C2
        - Native
    Gender:
      type: string
      enum:
        - Female
        - Male
        - Other
        - Prefer not to say
    Comment:
      type: object
      properties:
        author:
          type: string
        description:
          type: string
        text:
          type: string
        date:
          type: string
      required:
        - author
        - description
        - text
        - date
      examples:
        - author: Aerandir Brandybuck
          description: Reason for first choice
          text: I love cars
          date: 2024-02-15
    Allocation:
      type: object
      description: A project with references to the students assigned to this project as part of the matching result
      properties:
        projectId:
          type: string
        students:
          type: array
          items:
            type: string
            format: tum id
      required:
        - projectId
        - students
      examples:
        - projectId: ios2223quartett
          students:
            - '9d0e016b-5019-41fe-9ae9-8b6784080693'
            - '704f39d9-3936-4005-a0ca-2cc2fe989cec'
